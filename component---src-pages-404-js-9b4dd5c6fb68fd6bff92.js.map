{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","generateTitleTemplate","_ref","description","SEO","_ref2","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","bioQuery","Bio","react_default","gatsby_browser_entry","className","_4027657132","Layout","header","_this$props","children","__PATH_PREFIX__","pathname","to","Fragment","components_Bio","Date","getFullYear"],"mappings":"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","file":"component---src-pages-404-js-9b4dd5c6fb68fd6bff92.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction generateTitleTemplate (title, {description}) {\n  if(title !== 'All posts') {\n    return `${title} | ${description}`\n  } else {\n    return `${description} | ${title}`\n  }\n}\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={generateTitleTemplate(title, data.site.siteMetadata)}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <small className=\"inline-block\">\n            Written by <strong>{author}</strong> who lives and works in London building digital stuff.\n          </small>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Bio from '../components/Bio'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1 className=\"logo\">\n          <Link\n            className=\"no-underline\"\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3 className=\"logo\">\n          <Link\n            className=\"no-underline\"\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <React.Fragment>\n        <header className=\"header\">\n          {header}\n          <Link className=\"no-underline sans-serif\" to={`/`}>All posts</Link>\n        </header>\n        {children}\n        <Bio />\n        <footer>\n          <small>© {new Date().getFullYear()} - Built with ❤</small>\n        </footer>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}